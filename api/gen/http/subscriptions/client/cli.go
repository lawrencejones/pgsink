// Code generated by goa v3.5.4, DO NOT EDIT.
//
// Subscriptions HTTP client CLI support package
//
// Command:
// $ goa gen github.com/lawrencejones/pgsink/api/design -o api

package client

import (
	"encoding/json"
	"fmt"

	subscriptions "github.com/lawrencejones/pgsink/api/gen/subscriptions"
)

// BuildAddTablePayload builds the payload for the Subscriptions AddTable
// endpoint from CLI flags.
func BuildAddTablePayload(subscriptionsAddTableBody string) (*subscriptions.SubscriptionPublishedTable, error) {
	var err error
	var body AddTableRequestBody
	{
		err = json.Unmarshal([]byte(subscriptionsAddTableBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"name\": \"payments\",\n      \"schema\": \"public\"\n   }'")
		}
	}
	v := &subscriptions.SubscriptionPublishedTable{
		Schema: body.Schema,
		Name:   body.Name,
	}

	return v, nil
}

// BuildStopTablePayload builds the payload for the Subscriptions StopTable
// endpoint from CLI flags.
func BuildStopTablePayload(subscriptionsStopTableBody string) (*subscriptions.SubscriptionPublishedTable, error) {
	var err error
	var body StopTableRequestBody
	{
		err = json.Unmarshal([]byte(subscriptionsStopTableBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"name\": \"payments\",\n      \"schema\": \"public\"\n   }'")
		}
	}
	v := &subscriptions.SubscriptionPublishedTable{
		Schema: body.Schema,
		Name:   body.Name,
	}

	return v, nil
}
