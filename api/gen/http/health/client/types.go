// Code generated by goa v3.5.4, DO NOT EDIT.
//
// Health HTTP client types
//
// Command:
// $ goa gen github.com/lawrencejones/pgsink/api/design -o api

package client

import (
	health "github.com/lawrencejones/pgsink/api/gen/health"
	goa "goa.design/goa/v3/pkg"
)

// CheckResponseBody is the type of the "Health" service "Check" endpoint HTTP
// response body.
type CheckResponseBody struct {
	// Status of the API
	Status *string `form:"status,omitempty" json:"status,omitempty" xml:"status,omitempty"`
}

// NewCheckResultOK builds a "Health" service "Check" endpoint result from a
// HTTP "OK" response.
func NewCheckResultOK(body *CheckResponseBody) *health.CheckResult {
	v := &health.CheckResult{
		Status: *body.Status,
	}

	return v
}

// ValidateCheckResponseBody runs the validations defined on CheckResponseBody
func ValidateCheckResponseBody(body *CheckResponseBody) (err error) {
	if body.Status == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("status", "body"))
	}
	if body.Status != nil {
		if !(*body.Status == "healthy") {
			err = goa.MergeErrors(err, goa.InvalidEnumValueError("body.status", *body.Status, []interface{}{"healthy"}))
		}
	}
	return
}
